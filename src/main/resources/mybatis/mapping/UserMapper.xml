<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myiot.myserver.mapper.system.UserMapper">
  <resultMap id="BaseResultMap" type="com.myiot.myserver.data.po.system.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="dept_id" jdbcType="VARCHAR" property="deptId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from myiot_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.myiot.myserver.data.po.system.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into myiot_user (id, `name`, mobile,
      sex, dept_id, email, remark,
      create_date)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
      #{sex,jdbcType=BIT}, #{deptId,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
      #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.myiot.myserver.data.po.system.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update myiot_user
    set `name` = #{name,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      dept_id = #{deptId,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, `name`, mobile, sex, dept_id, email, remark, create_date
    from myiot_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, `name`, mobile, sex, dept_id, email, remark, create_date
    from myiot_user
  </select>

  <select id="queryByPage" parameterType="com.myiot.myserver.data.vo.system.UserQuery"
          resultType="com.myiot.myserver.data.vo.system.UserInfo">
    SELECT
        a.user_id AS id,
        a.login_name AS accountName,
        b.name AS userName,
        b.mobile AS mobile,
        b.sex AS sex,
        b.dept_id AS depId,
        b.email AS email,
        b.remark AS remark,
        d.name AS depName
    FROM myiot_account a
    LEFT JOIN myiot_user b ON a.user_id = b.id
    LEFT JOIN myiot_department d ON b.dept_id = d.id
    WHERE 1=1
    <if test="accountName != null and accountName != ''">
      AND a.login_name LIKE CONCAT('%',#{accountName}, '%')
    </if>
    <if test="userName != null and userName != ''">
      AND b.name LIKE CONCAT('%',#{userName}, '%')
    </if>
    <if test="sex != null">
      AND b.sex = #{sex}
    </if>
    <if test="depId != null and depId != ''">
      AND b.dept_id = #{depId}
    </if>
  </select>

  <delete id="deleteUsers" parameterType="java.util.List">
    DELETE FROM myiot_user
    WHERE id IN
    <foreach collection="userIds" item="userId" open="(" separator="," close=")">
      #{userId}
    </foreach>
  </delete>
</mapper>
